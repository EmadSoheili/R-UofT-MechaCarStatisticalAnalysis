?print
?print
install.packages('tidyverse')
install.packages('jsonlite')
detach("package:stats", unload = TRUE)
library(tidyselect)
detach("package:tidyselect", unload = TRUE)
library(tidyselect)
detach("package:tidyselect", unload = TRUE)
install.packages("jsonlite")
install.packages(c("boot", "foreign", "Matrix"))
install.packages('jsonlite')
library(rlang)
detach("package:rlang", unload = TRUE)
install.packages("rlang")
install.packages('jsonlite')
x <- 3
x <- 5
numlist <- c(0,1,2,3,4,5,6,7,8,9)
demo_table <- read.csv(file='demo.csv', check.names = F, stringsAsFactors = F)
setwd("~/DA/GitHub/R-UofT-MechaCarStatisticalAnalysis")
setwd("~/DA/GitHub/R-UofT-MechaCarStatisticalAnalysis")
library(dplyr)
library(dbplyr)
detach("package:dbplyr", unload = TRUE)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
mpg_df <- read.csv('MechaCar_mpg')
mpg_df <- read.csv('MechaCar_mpg.csv')
View(mpg_df)
View(mpg_df)
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD)
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, mpg_df)
reg_result <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, mpg_df)
summary(reg_result)
View(reg_result)
library(dplyr)
mpg_df <- read.csv('MechaCar_mpg.csv')
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, mpg_df))
summary(lm(mpg ~ vehicle_length + vehicle_weight + ground_clearance + AWD, mpg_df))
summary(lm(mpg ~ vehicle_length + vehicle_weight + ground_clearance, mpg_df))
summary(lm(mpg ~ vehicle_length + ground_clearance, mpg_df))
# Part 2
susp_df <- read.csv('Suspension_Coilcsv')
# Part 2
susp_df <- read.csv('Suspension_Coil.csv')
summarize(susp_df)
View(susp_df)
total_summary <- summarize(susp_df)
total_summary
View(total_summary)
View(total_summary)
View(susp_df)
View(susp_df)
total_summary <- summarize(susp_df$PSI)
summarize(susp_df$PSI)
View(susp_df)
?summarize
total_summary <- susp_df %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
View(total_summary)
total_summary <- summarize(susp_df, Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
View(total_summary)
View(total_summary)
lot summary <- group_by(susp_df, Manufacturing_Lot) %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
lot_summary <- group_by(susp_df, Manufacturing_Lot) %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
View(lot_summary)
View(lot_summary)
View(total_summary)
View(mpg_df)
View(susp_df)
# Part 3
t.test(susp_df, mu=1500)
# Part 3
t.test(susp_df$PSI, mu=1500)
View(susp_df)
lot1 <- subset(susp_df, Manufarcturing_Lot == 'Lot1')
lot1 <- subset(susp_df, Manufacturing_Lot == 'Lot1')
View(lot1)
View(lot1)
lot2 <- subset(susp_df, Manufacturing_Lot == 'Lot2')
lot3 <- subset(susp_df, Manufacturing_Lot == 'Lot3')
View(lot2)
View(lot3)
t.test (lot1$PSI, mu=1500)
t.test (lot2$PSI, mu=1500)
t.test (lot3$PSI, mu=1500)
View(total_summary)
t.test (lot1$PSI, mu=1500)
t.test (lot2$PSI, mu=1500)
t.test (lot3$PSI, mu=1500)
library(dplyr)
susp_df <- read.csv('Suspension_Coil.csv')
total_summary <- summarize(susp_df, Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
lot_summary <- group_by(susp_df, Manufacturing_Lot) %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
library(dplyr)
# Part 1
mpg_df <- read.csv('MechaCar_mpg.csv')
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, mpg_df))
summary(lm(mpg ~ vehicle_length + ground_clearance, mpg_df))
# Part 2
susp_df <- read.csv('Suspension_Coil.csv')
total_summary <- summarize(susp_df, Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
lot_summary <- group_by(susp_df, Manufacturing_Lot) %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
# Part 3
t.test(susp_df$PSI, mu=1500)
lot1 <- subset(susp_df, Manufacturing_Lot == 'Lot1')
lot2 <- subset(susp_df, Manufacturing_Lot == 'Lot2')
lot3 <- subset(susp_df, Manufacturing_Lot == 'Lot3')
t.test (lot1$PSI, mu=1500)
t.test (lot2$PSI, mu=1500)
t.test (lot3$PSI, mu=1500)
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, mpg_df)
